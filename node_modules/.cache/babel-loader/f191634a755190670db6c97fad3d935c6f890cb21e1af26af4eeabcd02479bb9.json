{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kotha\\\\OneDrive\\\\Desktop\\\\fullstack\\\\findsearch\\\\src\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('https://restcountries.com/v3.1/all');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCountries(data.map(country => ({\n          country: country.name.common,\n          capital: country.capital ? country.capital[0] : 'N/A'\n        })));\n      } catch (error) {\n        console.error('Error fetching country data:', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  useEffect(() => {\n    if (searchQuery.trim() !== '') {\n      const searchResults = countries.filter(country => country.country.toLowerCase().includes(searchQuery.toLowerCase()) || country.capital.toLowerCase().includes(searchQuery.toLowerCase()));\n      setFilteredCountries(searchResults);\n    } else {\n      setFilteredCountries([]);\n    }\n  }, [searchQuery, countries]);\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Search Countries by Name or Capital\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleSearchChange,\n      placeholder: \"Search by country or capital\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), filteredCountries.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.countryList,\n      children: filteredCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.countryItem,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: styles.countryName,\n          children: country.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.capitalName,\n          children: [\" - \", country.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchCountries, \"9o0eZaknCY/oY/7nLa2Ypm8Jwpc=\");\n_c = SearchCountries;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px',\n    backgroundColor: '#f9f9f9',\n    fontFamily: 'Arial, sans-serif'\n  },\n  heading: {\n    color: '#2c3e50',\n    fontSize: '28px',\n    marginBottom: '20px'\n  },\n  input: {\n    padding: '12px',\n    width: '350px',\n    borderRadius: '8px',\n    border: '2px solid #ccc',\n    outline: 'none',\n    fontSize: '16px',\n    transition: 'border 0.3s ease',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n  },\n  countryList: {\n    listStyle: 'none',\n    padding: 0,\n    marginTop: '30px',\n    width: '80%',\n    margin: '0 auto',\n    maxWidth: '600px'\n  },\n  countryItem: {\n    padding: '15px',\n    margin: '10px 0',\n    borderRadius: '8px',\n    backgroundColor: '#fff',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    transition: 'transform 0.3s ease',\n    border: '1px solid #e1e1e1'\n  },\n  countryItemHover: {\n    transform: 'scale(1.03)'\n  },\n  countryName: {\n    fontWeight: 'bold',\n    color: '#34495e'\n  },\n  capitalName: {\n    color: '#7f8c8d'\n  }\n};\nexport default SearchCountries;\nvar _c;\n$RefreshReg$(_c, \"SearchCountries\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchCountries","_s","countries","setCountries","searchQuery","setSearchQuery","filteredCountries","setFilteredCountries","fetchCountries","response","fetch","ok","Error","status","data","json","map","country","name","common","capital","error","console","trim","searchResults","filter","toLowerCase","includes","handleSearchChange","e","target","value","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","input","length","countryList","index","countryItem","countryName","capitalName","_c","textAlign","padding","backgroundColor","fontFamily","color","fontSize","marginBottom","width","borderRadius","border","outline","transition","boxShadow","listStyle","marginTop","margin","maxWidth","display","justifyContent","alignItems","countryItemHover","transform","fontWeight","$RefreshReg$"],"sources":["C:/Users/kotha/OneDrive/Desktop/fullstack/findsearch/src/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SearchCountries = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filteredCountries, setFilteredCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const response = await fetch('https://restcountries.com/v3.1/all'); \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setCountries(data.map(country => ({\r\n          country: country.name.common,\r\n          capital: country.capital ? country.capital[0] : 'N/A'\r\n        }))); \r\n      } catch (error) {\r\n        console.error('Error fetching country data:', error);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery.trim() !== '') {\r\n      const searchResults = countries.filter(country =>\r\n        country.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        country.capital.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n      setFilteredCountries(searchResults);\r\n    } else {\r\n      setFilteredCountries([]);\r\n    }\r\n  }, [searchQuery, countries]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Search Countries by Name or Capital</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Search by country or capital\"\r\n        style={styles.input}\r\n      />\r\n      {filteredCountries.length > 0 && (\r\n        <ul style={styles.countryList}>\r\n          {filteredCountries.map((country, index) => (\r\n            <li key={index} style={styles.countryItem}>\r\n              <strong style={styles.countryName}>{country.country}</strong>\r\n              <span style={styles.capitalName}> - {country.capital}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    padding: '20px',\r\n    backgroundColor: '#f9f9f9',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  heading: {\r\n    color: '#2c3e50',\r\n    fontSize: '28px',\r\n    marginBottom: '20px',\r\n  },\r\n  input: {\r\n    padding: '12px',\r\n    width: '350px',\r\n    borderRadius: '8px',\r\n    border: '2px solid #ccc',\r\n    outline: 'none',\r\n    fontSize: '16px',\r\n    transition: 'border 0.3s ease',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  countryList: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n    marginTop: '30px',\r\n    width: '80%',\r\n    margin: '0 auto',\r\n    maxWidth: '600px',\r\n  },\r\n  countryItem: {\r\n    padding: '15px',\r\n    margin: '10px 0',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#fff',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    transition: 'transform 0.3s ease',\r\n    border: '1px solid #e1e1e1',\r\n  },\r\n  countryItemHover: {\r\n    transform: 'scale(1.03)',\r\n  },\r\n  countryName: {\r\n    fontWeight: 'bold',\r\n    color: '#34495e',\r\n  },\r\n  capitalName: {\r\n    color: '#7f8c8d',\r\n  },\r\n};\r\n\r\nexport default SearchCountries;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}