{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kotha\\\\OneDrive\\\\Desktop\\\\fullstack\\\\findsearch\\\\src\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredCountries, setFilteredCountries] = useState([]);\n\n  // Fetch country data from an external JSON link\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('https://dpaste.com/79QXDY8TD'); // Replace with your actual JSON link\n        const data = await response.json();\n        setCountries(data); // Set fetched data\n      } catch (error) {\n        console.error('Error fetching country data:', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n\n  // Update search results as user types\n  useEffect(() => {\n    if (searchQuery.trim() !== '') {\n      const searchResults = countries.filter(country => country.country.toLowerCase().includes(searchQuery.toLowerCase()) || country.capital.toLowerCase().includes(searchQuery.toLowerCase()));\n      setFilteredCountries(searchResults);\n    } else {\n      setFilteredCountries([]); // Clear results if no search query\n    }\n  }, [searchQuery, countries]);\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value); // Update search query\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#333'\n      },\n      children: \"Search Countries by Name or Capital\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleSearchChange,\n      placeholder: \"Search by country or capital\",\n      style: {\n        padding: '10px',\n        width: '300px',\n        borderRadius: '5px',\n        border: '1px solid #ccc',\n        marginBottom: '20px',\n        fontSize: '16px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), filteredCountries.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0\n      },\n      children: filteredCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          padding: '10px',\n          borderBottom: '1px solid #ccc'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: country.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), \" - \", country.capital]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchCountries, \"9o0eZaknCY/oY/7nLa2Ypm8Jwpc=\");\n_c = SearchCountries;\nexport default SearchCountries;\nvar _c;\n$RefreshReg$(_c, \"SearchCountries\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchCountries","_s","countries","setCountries","searchQuery","setSearchQuery","filteredCountries","setFilteredCountries","fetchCountries","response","fetch","data","json","error","console","trim","searchResults","filter","country","toLowerCase","includes","capital","handleSearchChange","e","target","value","style","textAlign","padding","children","color","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","width","borderRadius","border","marginBottom","fontSize","length","listStyle","map","index","borderBottom","_c","$RefreshReg$"],"sources":["C:/Users/kotha/OneDrive/Desktop/fullstack/findsearch/src/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SearchCountries = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filteredCountries, setFilteredCountries] = useState([]);\r\n\r\n  // Fetch country data from an external JSON link\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const response = await fetch('https://dpaste.com/79QXDY8TD'); // Replace with your actual JSON link\r\n        const data = await response.json();\r\n        setCountries(data); // Set fetched data\r\n      } catch (error) {\r\n        console.error('Error fetching country data:', error);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  // Update search results as user types\r\n  useEffect(() => {\r\n    if (searchQuery.trim() !== '') {\r\n      const searchResults = countries.filter(country =>\r\n        country.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        country.capital.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n      setFilteredCountries(searchResults);\r\n    } else {\r\n      setFilteredCountries([]); // Clear results if no search query\r\n    }\r\n  }, [searchQuery, countries]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value); // Update search query\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2 style={{ color: '#333' }}>Search Countries by Name or Capital</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Search by country or capital\"\r\n        style={{\r\n          padding: '10px',\r\n          width: '300px',\r\n          borderRadius: '5px',\r\n          border: '1px solid #ccc',\r\n          marginBottom: '20px',\r\n          fontSize: '16px',\r\n        }}\r\n      />\r\n      {filteredCountries.length > 0 && (\r\n        <ul style={{ listStyle: 'none', padding: 0 }}>\r\n          {filteredCountries.map((country, index) => (\r\n            <li key={index} style={{ padding: '10px', borderBottom: '1px solid #ccc' }}>\r\n              <strong>{country.country}</strong> - {country.capital}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchCountries;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAC;QAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,YAAY,CAACQ,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAX,SAAS,CAAC,MAAM;IACd,IAAIO,WAAW,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7B,MAAMC,aAAa,GAAGd,SAAS,CAACe,MAAM,CAACC,OAAO,IAC5CA,OAAO,CAACA,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,WAAW,CAACe,WAAW,CAAC,CAAC,CAAC,IACjED,OAAO,CAACG,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,WAAW,CAACe,WAAW,CAAC,CAAC,CAClE,CAAC;MACDZ,oBAAoB,CAACS,aAAa,CAAC;IACrC,CAAC,MAAM;MACLT,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACH,WAAW,EAAEF,SAAS,CAAC,CAAC;EAE5B,MAAMoB,kBAAkB,GAAIC,CAAC,IAAK;IAChClB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACE1B,OAAA;IAAK2B,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnD9B,OAAA;MAAI2B,KAAK,EAAE;QAAEI,KAAK,EAAE;MAAO,CAAE;MAAAD,QAAA,EAAC;IAAmC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtEnC,OAAA;MACEoC,IAAI,EAAC,MAAM;MACXV,KAAK,EAAErB,WAAY;MACnBgC,QAAQ,EAAEd,kBAAmB;MAC7Be,WAAW,EAAC,8BAA8B;MAC1CX,KAAK,EAAE;QACLE,OAAO,EAAE,MAAM;QACfU,KAAK,EAAE,OAAO;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,MAAM;QACpBC,QAAQ,EAAE;MACZ;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACD5B,iBAAiB,CAACqC,MAAM,GAAG,CAAC,iBAC3B5C,OAAA;MAAI2B,KAAK,EAAE;QAAEkB,SAAS,EAAE,MAAM;QAAEhB,OAAO,EAAE;MAAE,CAAE;MAAAC,QAAA,EAC1CvB,iBAAiB,CAACuC,GAAG,CAAC,CAAC3B,OAAO,EAAE4B,KAAK,kBACpC/C,OAAA;QAAgB2B,KAAK,EAAE;UAAEE,OAAO,EAAE,MAAM;UAAEmB,YAAY,EAAE;QAAiB,CAAE;QAAAlB,QAAA,gBACzE9B,OAAA;UAAA8B,QAAA,EAASX,OAAO,CAACA;QAAO;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAAChB,OAAO,CAACG,OAAO;MAAA,GAD9CyB,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CAjEID,eAAe;AAAAgD,EAAA,GAAfhD,eAAe;AAmErB,eAAeA,eAAe;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}